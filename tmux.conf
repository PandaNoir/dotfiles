# ---------------------------------------------------------------------------- "
# basic
# ---------------------------------------------------------------------------- "

# プレフィックスキーを Ctrl+j キーにする
set-option -g prefix C-j

# 元々のプレフィックスキーの Ctrl+b だと Vim とかぶるので退避
unbind-key C-b

# I love Vim.
set-window-option -g mode-keys vi

# ウィンドウ、ペインの番号を1から始まるようにする
# （キーボード配置は1が左にあるので選択しやすい）
set-option -g base-index 1
set-option -g pane-base-index 1

# Mac でクリップボード（ペーストボード）を使いやすく
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/
# http://d.hatena.ne.jp/koseki2/20110816/TmuxCopy
set-option -g default-command 'reattach-to-user-namespace -l zsh'
#bind C-y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
#bind C-p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
bind-key C-q run-shell 'reattach-to-user-namespace tmux-pbcopy'

# ウィンドウ閉じたときに番号振り直して詰める
set-option -g renumber-windows on

# ウィンドウ名が実行中のコマンド名になるのを止める
setw -g automatic-rename off


# 新規ウィンドウ、ペイン分割時にパス引き継ぎ
# http://qiita.com/naoty_k/items/954d1d0080d0a7d52584
bind-key    c     new-window -c "#{pane_current_path}"
bind-key    %     split-window -h -c "#{pane_current_path}"
bind-key    '"'     split-window -v -c "#{pane_current_path}"


# vimのため
set-option -sg escape-time 10

bind C-k clear-history \; display-message "history cleared"



# ---------------------------------------------------------------------------- "
# mapping
# ---------------------------------------------------------------------------- "

# .tmux.conf の再読み込みを [prefix] r キーに割り当て
# http://d.hatena.ne.jp/kiririmode/20120321/p1
bind-key r source-file ~/.tmux.conf\; display-message '$HOME/.tmux.conf reloaded.'

# コピーモードの始まりを v に割り当て
bind-key -t vi-copy v begin-selection

# コピーモードの終わりを y に割り当て
bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'

# ペイン操作を Vi ライクに
unbind-key -n J
unbind-key -n K
unbind-key -n L
unbind-key -n H
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -L
bind-key -r H resize-pane -R

# ショートカットでエディタ用の幅に変更
bind-key E resize-pane -x 140



# ---------------------------------------------------------------------------- "
# appearance
# ---------------------------------------------------------------------------- "

# タイトル表示あり
set-option -g set-titles on

# カラー基本設定
set-option -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# ステータスラインのカラー
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg yellow




# ---------------------------------------------------------------------------- "
# extra
# ---------------------------------------------------------------------------- "

# 予め用意した proj シェルスクリプトに tmux の入力受け付けで引数を渡す
# シェルスクリプト上でエディタ、シェル、タスクランナーなどに分割表示
# bind-key P command-prompt -p "projectname:" "run-shell 'proj %1'"




# ---------------------------------------------------------------------------- "
# plugins
# ---------------------------------------------------------------------------- "

set -g @tpm_plugins '         \
  tmux-plugins/tpm            \
  tmux-plugins/tmux-resurrect \
  tmux-continuum              \
  tmux-plugins/tmux-yank      \
'
run-shell '~/.tmux/plugins/tpm/tpm'

set -g @resurrect-strategy-vim 'session'


# [exited]対策
set-option -g default-command ""


# install tmux-resurrect
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-resurrect-auto \
'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'

run-shell '~/.tmux/plugins/tpm/tpm'

set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"
