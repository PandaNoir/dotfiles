[[plugins]]
repo = 'junegunn/fzf.vim'
on_cmd = [
  'Files',
  'ProjectFiles',
  'Buffers',
  'BLines',
  'History',
  'Tags',
  'BTags',
  'GFiles',
  'Ag',
  'Rg',
]
hook_add = '''
set rtp+=$XDG_CACHE_HOME/fzf
'''
hook_source = 'runtime! plugins/fzf.vim'

[[plugins]]
repo = 'lambdalisue/fern.vim'
on_cmd = ['Fern']
hook_add = '''
nmap <silent> ,s <Cmd>Fern . -drawer -reveal=%<CR>
'''
hook_source='''
let g:fern#default_hidden=1
'''

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
on_source = ['fern.vim']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'chr4/nginx.vim'
on_ft = ['nginx']

[[plugins]]
repo = 'prettier/vim-prettier'
on_ft = ['javascript', 'javascript.jsx', 'typescript', 'typescript.tsx','typescriptreact']
hook_source = '''
let g:prettier#autoformat = 1
let g:prettier#autoformat_require_pragma = 0
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_post_update = ':TSUpdate'
lua_source = '''
require'nvim-treesitter.configs'.setup {
  ensure_installed = {
    'javascript',
    'typescript',
    'tsx',
    'json',
    'html',
    'markdown',
    'toml',
    'vim'
  },
  additional_vim_regex_highlighting = false,
  highlight = {
    enable = true,
    disable = {'c', 'help'},
  },
}
'''

[[plugins]]
repo = 'cohama/lexima.vim' # かっこの自動補完
on_event = 'InsertEnter'
hook_source = 'runtime! plugins/lexima.vim'


[[plugins]]
repo = 'kana/vim-textobj-user'
on_event = 'VimEnter'

[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = 'VimEnter'

[[plugins]]
repo = 'tpope/vim-repeat'
on_event = 'VimEnter'
hook_source = '''
" function s:execute_repeatable_macro(name) abort
function! Execute_repeatable_macro(name)
  const name = '@' .. a:name

  execute 'normal!' name
  silent! call repeat#set("\<Plug>macro_" .. a:name)
endfunction

for x in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
  execute 'nnoremap' '<silent>' ("<Plug>macro_" .. x) (":\<C-u>call Execute_repeatable_macro('" .. x .. "')\<CR>")
  execute 'nmap' ('@' .. x) ("<Plug>macro_" .. x)
endfor
'''

[[plugins]]
repo = 'justinmk/vim-sneak'
on_event = 'VimEnter'

[[plugins]]
repo = 'tomtom/tcomment_vim'
on_event = 'VimEnter'
hook_source = '''
au MyAutoCmd VimEnter * nnoremap <silent> <Plug>RepeatTComment :TComment \| silent! call repeat#set("\<Plug>RepeatTComment")<CR>
au MyAutoCmd VimEnter * nmap <c-_><c-_> <Plug>RepeatTComment
'''
