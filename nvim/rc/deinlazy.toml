[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_source = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_refresh_always = 0
let g:deoplete#file#enable_buffer_path = 1
inoremap <expr><tab> pumvisible() ? "\<C-n>" :
    \ neosnippet#expandable_or_jumpable() ?
    \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_ft = 'snippet'
on_event = 'InsertEnter'
depends = ['neosnippet-snippets']
hook_source = '''
let g:neosnippet#disable_runtime_snippets = { "_": 1, }
let g:neosnippet#enable_snipmate_compatibility = 1
let g:neosnippet#snippets_directory = g:cache_home . '/dein/repos/github.com/Shougo/neosnippet-snippets/neosnippets'
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'dag/vim-fish'
on_ft = ['fish']

[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = ['cpp']

[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
on_ft = ['cpp']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

[[plugins]]
repo = 'chr4/nginx.vim'
on_ft = ['nginx']

[[plugins]] # goコマンド補完
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
let g:go_highlight_functions = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
'''

# [[plugins]] # vim-go代替
# repo = 'zchee/nvim-go'
# build = 'make'
# on_ft = 'go'

[[plugins]] # コード補完（Golang用）
repo = 'zchee/deoplete-go'
on_ft = 'go'

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx']


[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript', 'typescript.tsx']

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
on_ft = ['typescript.tsx']

[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['markdown']
hook_source = '''
" todoリストを簡単に入力する
abbreviate tl - [ ]

" todoリストのon/offを切り替える
nnoremap <buffer> <Space><Space> :call ToggleCheckbox()<CR>

function! ToggleCheckbox()
  let l:line = getline('.')
  if l:line =~ '^\-\s\[\s\]'
    let l:result = substitute(l:line, '^-\s\[\s\]', '- [x]', '')
    call setline('.', l:result)
  elseif l:line =~ '^\-\s\[x\]'
    let l:result = substitute(l:line, '^-\s\[x\]', '- [ ]', '')
    call setline('.', l:result)
  end
endfunction
'''

[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = 'pug'
