# Rubyの自動補完
[[plugins]]
repo = 'Shougo/deoplete-rct'
on_ft = ['ruby']

# Rubyの自動補完
[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'dag/vim-fish'
on_ft = ['fish']

[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = ['cpp']

[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
on_ft = ['cpp']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

[[plugins]]
repo = 'chr4/nginx.vim'
on_ft = ['nginx']

[[plugins]] # goコマンド補完
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
let g:go_highlight_functions = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
'''

# [[plugins]] # vim-go代替
# repo = 'zchee/nvim-go'
# build = 'make'
# on_ft = 'go'

[[plugins]] # コード補完（Golang用）
repo = 'zchee/deoplete-go'
on_ft = 'go'

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'jelera/vim-javascript-syntax'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript', 'typescript.tsx']

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
on_ft = ['typescript.tsx']

[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['markdown']
hook_source = '''
" todoリストを簡単に入力する
abbreviate tl - [ ]

" todoリストのon/offを切り替える
nnoremap <Plug>ToggleCheckbox :<C-u>call ToggleCheckbox() \| silent! call repeat#set("\<Plug>ToggleCheckbox")<CR>
nmap <buffer> <Space><Space> <Plug>ToggleCheckbox

function! ToggleCheckbox()
  let l:line = getline('.')
  if l:line =~ '^\-\s\[\s\]'
    let l:result = substitute(l:line, '^-\s\[\s\]', '- [x]', '')
    call setline('.', l:result)
  elseif l:line =~ '^\-\s\[x\]'
    let l:result = substitute(l:line, '^-\s\[x\]', '- [ ]', '')
    call setline('.', l:result)
  end
endfunction

'''

[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'
hook_source = '''
let g:user_emmet_settings = {
\    'variables' : {
\        'lang' : 'ja',
\    },
\    'html' : {
\        'snippets'   : {
\            'html:5': "<!DOCTYPE html>\n"
\                    ."<html lang=\"${lang}\">\n"
\                    ."<meta charset=\"${charset}\">\n"
\                    ."<title></title>\n"
\                    ."${child}|\n",
\            'meta:ip': '<meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">',
\        }
\    }
\}
'''

[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = 'pug'

[[plugins]]
repo = 'GutenYe/json5.vim'
on_ft = 'json5'

[[plugins]]
repo = 'itchyny/vim-haskell-indent'
on_ft = 'haskell'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
let g:rustfmt_autosave = 1
let g:rust_doc#define_map_K = 0
'''

