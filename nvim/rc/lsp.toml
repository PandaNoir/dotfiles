[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
on_event = 'BufRead'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'BufRead'
hook_source = 'runtime! plugins/lspconfig.vim'
depends = ['lspsaga.nvim', 'nvim-cmp', 'mason-lspconfig.nvim']

[[plugins]]
repo = 'glepnir/lspsaga.nvim'
on_event = 'BufRead'
lua_source = '''
require("lspsaga").setup{
  finder = {
    keys = {
      jump_to = '<CR>',
      expand_or_jump = '<CR>',
      quit = { 'q', '<ESC>' },
    },
  },
}
'''

[[plugins]]
repo = 'hrsh7th/nvim-cmp'
on_event = 'BufRead'
lua_source = '''
local cmp = require'cmp'

cmp.setup({
  enabled = true,
  mapping = cmp.mapping.preset.insert({
    ['<C-u>'] = cmp.mapping.scroll_docs(-4),
    ['<C-d>'] = cmp.mapping.scroll_docs(4),
    ['<C-Space>'] = cmp.mapping.complete(),
    ['<CR>'] = cmp.mapping.confirm({ select = true }),
    ['<Tab>'] = function(fallback)
      if cmp.visible() then
        cmp.select_next_item()
      else
        fallback()
      end
    end
  }),
  window = {
    completion = cmp.config.window.bordered(),
    documentation = cmp.config.window.bordered(),
  },
  sources = cmp.config.sources({
    { name = 'nvim_lsp' },
    { name = 'buffer' },
    { name = 'path' },
  }),
  formatting = {
    fields = { 'abbr', 'kind', 'menu' },
  },
})
'''
depends = ['cmp-buffer', 'cmp-nvim-lsp', 'cmp-path']

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-buffer'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-path'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_post_update = ':TSUpdate'
lua_source = '''
require'nvim-treesitter.configs'.setup {
  ensure_installed = {
    'javascript',
    'typescript',
    'tsx',
    'vue',
    'css',
    'html',
    'json',
    'lua',
    'markdown_inline',
    'markdown',
    'scss',
    'toml',
    'vim'
  },
  additional_vim_regex_highlighting = false,
  highlight = {
    enable = true,
    disable = {'c', 'help'},
  },
}
'''
